package ui;

import core.ga.facade.Evolution;
import core.ga.operators.factories.alterer.types.CrossoverTypes;
import core.ga.operators.factories.alterer.types.MutatorTypes;
import core.ga.operators.factories.alterer.types.SelectorTypes;
import core.ga.operators.fitness.FitnessTypes;
import core.model.inventory.impl.storage.DoubleStorage;
import core.model.network.impl.DoubleNetwork;
import org.jenetics.Phenotype;
import org.jenetics.engine.EvolutionResult;
import ui.tools.Logger;
import ui.tools.UIVisualizator;

import java.awt.*;

public class GeneticPanel extends javax.swing.JPanel {
    private final Logger logger;
    
    private Evolution evolution;
    private DoubleStorage storage;
    private DoubleNetwork network;
    
    /**
     * Creates new form GeneticPanel
     * @param storage
     * @param network
     */
    public GeneticPanel(DoubleStorage storage, DoubleNetwork network) {
        initComponents();
        this.storage = storage;
        this.network = network;
        this.logger = Logger.getLogger(logTextArea);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        runGAPanel = new javax.swing.JPanel();
        manualRunPanel = new javax.swing.JPanel();
        launchTypeLabel = new javax.swing.JLabel();
        launchTypeComboBox = new javax.swing.JComboBox<>();
        runButton = new javax.swing.JButton();
        numberOfGenerationsLabel = new javax.swing.JLabel();
        numberOfGenerationsSpinner = new javax.swing.JSpinner();
        numberOfThreadsLabel = new javax.swing.JLabel();
        numberOfThreadsSpinner = new javax.swing.JSpinner();
        gaConfigurationPanel = new javax.swing.JPanel();
        manualConfigPanel = new javax.swing.JPanel();
        initialPopulationLabel = new javax.swing.JLabel();
        initialPopulationTextField = new javax.swing.JTextField();
        crossoverProbabilityLabel = new javax.swing.JLabel();
        applyButton = new javax.swing.JButton();
        fitnessFunctionLabel = new javax.swing.JLabel();
        fitnessFunctionComboBox = new javax.swing.JComboBox<>();
        crossoverTypeLabel = new javax.swing.JLabel();
        crossoverTypeComboBox = new javax.swing.JComboBox<>();
        mutatorTypeLabel = new javax.swing.JLabel();
        mutatorTypeComboBox = new javax.swing.JComboBox<>();
        mutatorProbabilityLabel = new javax.swing.JLabel();
        crossoverProbabilitySpinner = new javax.swing.JSpinner();
        mutatorProbabilitySpinner = new javax.swing.JSpinner();
        selectionTypeLabel = new javax.swing.JLabel();
        selectionTypeComboBox = new javax.swing.JComboBox<>();
        selectionVariableLabel = new javax.swing.JLabel();
        selectionVariableTextField = new javax.swing.JTextField();
        populationVisualizationPanel = new javax.swing.JPanel();
        logPanel = new javax.swing.JPanel();
        logScrollPane = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(934, 620));

        runGAPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        runGAPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Run GA"));

        manualRunPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        manualRunPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Manual"));

        launchTypeLabel.setText("Launch Type:");

        launchTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Iterate", "To Best Result", "To Best Phenotype", "By Steady Fitness"}));

        runButton.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.highlight"));
        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        numberOfGenerationsLabel.setText("Number of generations:");
        numberOfGenerationsLabel.setToolTipText("");

        numberOfGenerationsSpinner.setModel(new javax.swing.SpinnerNumberModel(3, 1, null, 1));

        numberOfThreadsLabel.setText("Number of treads:");
        numberOfThreadsLabel.setToolTipText("");

        numberOfThreadsSpinner.setModel(new javax.swing.SpinnerNumberModel(10, 1, null, 1));

        javax.swing.GroupLayout manualRunPanelLayout = new javax.swing.GroupLayout(manualRunPanel);
        manualRunPanel.setLayout(manualRunPanelLayout);
        manualRunPanelLayout.setHorizontalGroup(
                manualRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(manualRunPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(manualRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(manualRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(manualRunPanelLayout.createSequentialGroup()
                                                        .addComponent(launchTypeLabel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(launchTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(manualRunPanelLayout.createSequentialGroup()
                                                        .addComponent(numberOfGenerationsLabel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(numberOfGenerationsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(manualRunPanelLayout.createSequentialGroup()
                                                        .addComponent(numberOfThreadsLabel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(numberOfThreadsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(221, Short.MAX_VALUE))
        );
        manualRunPanelLayout.setVerticalGroup(
                manualRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(manualRunPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(manualRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(launchTypeLabel)
                                        .addComponent(launchTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(manualRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(numberOfGenerationsLabel)
                                        .addComponent(numberOfGenerationsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(manualRunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(numberOfThreadsLabel)
                                        .addComponent(numberOfThreadsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                .addComponent(runButton)
                                .addContainerGap())
        );

        javax.swing.GroupLayout runGAPanelLayout = new javax.swing.GroupLayout(runGAPanel);
        runGAPanel.setLayout(runGAPanelLayout);
        runGAPanelLayout.setHorizontalGroup(
                runGAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(runGAPanelLayout.createSequentialGroup()
                                .addComponent(manualRunPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        runGAPanelLayout.setVerticalGroup(
                runGAPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(runGAPanelLayout.createSequentialGroup()
                                .addComponent(manualRunPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gaConfigurationPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        gaConfigurationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "GA Configuration"));

        manualConfigPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        manualConfigPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Manual"));

        initialPopulationLabel.setText("Initial population:");

        initialPopulationTextField.setText("10");

        crossoverProbabilityLabel.setText("Crossover Probability");
        crossoverProbabilityLabel.setToolTipText("");

        applyButton.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.highlight"));
        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        fitnessFunctionLabel.setText("Fitness Function:");

        fitnessFunctionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"CONSTANT_WEIGHT_FITNESS", "RANDOM_WEIGHT_FITNESS"}));

        crossoverTypeLabel.setText("Crossover Type:");

        crossoverTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"SINGLE_POINT_CROSSOVER", "MULTI_POINT_CROSSOVER", "PARTIALLY_MATCHED_CROSSOVER", "UNIFORM_CROSSOVER"}));

        mutatorTypeLabel.setText("Mutator Type:");

        mutatorTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"MUTATOR", "SWAP_MUTATOR"}));

        mutatorProbabilityLabel.setText("Mutation Probability");
        mutatorProbabilityLabel.setToolTipText("");

        crossoverProbabilitySpinner.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        crossoverProbabilitySpinner.setModel(new javax.swing.SpinnerNumberModel(0.5d, 0.0d, 1.0d, 0.1d));

        mutatorProbabilitySpinner.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        mutatorProbabilitySpinner.setModel(new javax.swing.SpinnerNumberModel(0.5d, 0.0d, 1.0d, 0.1d));

        selectionTypeLabel.setText("Selector Type:");

        selectionTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"ROULETTE_WHEEL_SELECTOR", "TOURNAMENT_SELECTOR", "BOLTZMANN_SELECTOR", "EXPONENTIAL_RANK_SELECTOR", "LINEAR_RANK_SELECTOR", "STOCHASTIC_UNIVERSAL_SELECTOR", "MONTE_CARLO_SELECTOR", "TRUNCATION_SELECTOR"}));

        selectionVariableLabel.setText("Selection Variable");
        selectionVariableLabel.setToolTipText("");

        selectionVariableTextField.setText("2");

        javax.swing.GroupLayout manualConfigPanelLayout = new javax.swing.GroupLayout(manualConfigPanel);
        manualConfigPanel.setLayout(manualConfigPanelLayout);
        manualConfigPanelLayout.setHorizontalGroup(
                manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(manualConfigPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(manualConfigPanelLayout.createSequentialGroup()
                                                .addComponent(initialPopulationLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(initialPopulationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(manualConfigPanelLayout.createSequentialGroup()
                                                .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(manualConfigPanelLayout.createSequentialGroup()
                                                                .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manualConfigPanelLayout.createSequentialGroup()
                                                                                        .addComponent(mutatorTypeLabel)
                                                                                        .addGap(18, 18, 18))
                                                                                .addGroup(manualConfigPanelLayout.createSequentialGroup()
                                                                                        .addComponent(crossoverTypeLabel)
                                                                                        .addGap(7, 7, 7)))
                                                                        .addGroup(manualConfigPanelLayout.createSequentialGroup()
                                                                                .addComponent(selectionTypeLabel)
                                                                                .addGap(17, 17, 17)))
                                                                .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(selectionTypeComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                                .addComponent(mutatorTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(crossoverTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addGroup(manualConfigPanelLayout.createSequentialGroup()
                                                                .addComponent(fitnessFunctionLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(fitnessFunctionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(applyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(crossoverProbabilityLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, manualConfigPanelLayout.createSequentialGroup()
                                                                        .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(mutatorProbabilityLabel)
                                                                                .addComponent(selectionVariableLabel))
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                        .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(selectionVariableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(mutatorProbabilitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addComponent(crossoverProbabilitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        manualConfigPanelLayout.setVerticalGroup(
                manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(manualConfigPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(initialPopulationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(initialPopulationLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(crossoverProbabilityLabel)
                                        .addComponent(crossoverTypeLabel)
                                        .addComponent(crossoverTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(crossoverProbabilitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(mutatorProbabilityLabel)
                                        .addComponent(mutatorTypeLabel)
                                        .addComponent(mutatorTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(mutatorProbabilitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(selectionVariableLabel)
                                        .addComponent(selectionTypeLabel)
                                        .addComponent(selectionTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(selectionVariableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(manualConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(applyButton)
                                        .addComponent(fitnessFunctionLabel)
                                        .addComponent(fitnessFunctionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout gaConfigurationPanelLayout = new javax.swing.GroupLayout(gaConfigurationPanel);
        gaConfigurationPanel.setLayout(gaConfigurationPanelLayout);
        gaConfigurationPanelLayout.setHorizontalGroup(
                gaConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(gaConfigurationPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(manualConfigPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        gaConfigurationPanelLayout.setVerticalGroup(
                gaConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(gaConfigurationPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(manualConfigPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        populationVisualizationPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        populationVisualizationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Population"));
        populationVisualizationPanel.setPreferredSize(new java.awt.Dimension(293, 280));

        javax.swing.GroupLayout populationVisualizationPanelLayout = new javax.swing.GroupLayout(populationVisualizationPanel);
        populationVisualizationPanel.setLayout(populationVisualizationPanelLayout);
        populationVisualizationPanelLayout.setHorizontalGroup(
                populationVisualizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 410, Short.MAX_VALUE)
        );
        populationVisualizationPanelLayout.setVerticalGroup(
                populationVisualizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 420, Short.MAX_VALUE)
        );

        logPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        logPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Log"));
        logPanel.setPreferredSize(new java.awt.Dimension(914, 169));

        logTextArea.setColumns(20);
        logTextArea.setLineWrap(true);
        logTextArea.setRows(5);
        logTextArea.setWrapStyleWord(true);
        logScrollPane.setViewportView(logTextArea);

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
                logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(logPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(logScrollPane)
                                .addContainerGap())
        );
        logPanelLayout.setVerticalGroup(
                logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(logPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(logScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(gaConfigurationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(runGAPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(populationVisualizationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(gaConfigurationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(runGAPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(populationVisualizationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        evolution = (new Evolution(network,
                storage,
                FitnessTypes.valueOf(fitnessFunctionComboBox.getSelectedItem().toString())
                        .withFitnessVariable(0.5))) // TODO Add fitness parameter
                .builder()
                .alterer(CrossoverTypes.valueOf(crossoverTypeComboBox.getSelectedItem().toString())
                                .withProbability(Double.valueOf(crossoverProbabilitySpinner.getValue().toString())),
                        MutatorTypes.valueOf(mutatorTypeComboBox.getSelectedItem().toString())
                                .withProbability(Double.valueOf(mutatorProbabilitySpinner.getValue().toString())))
                .selector(SelectorTypes.valueOf(selectionTypeComboBox.getSelectedItem().toString())
                        .withSelectionVariable(Double.valueOf(selectionVariableTextField.getText())))
                .initialPopulation(Integer.valueOf(initialPopulationTextField.getText()))
                .buildEngine();
        logger.trace("Evolution Engine is created");

        populationVisualizationPanel.setLayout(new BorderLayout());
    }//GEN-LAST:event_applyButtonActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        EvolutionResult result = null;
        Phenotype phenotype = null;
        
        switch (launchTypeComboBox.getSelectedItem().toString()) {
            case "Iterate": {
                result = evolution
                        .executors((int) numberOfThreadsSpinner.getValue())
                        .iterate((int) numberOfGenerationsSpinner.getValue());
                break;
            }
            case "To Best Result": {
                result = evolution
                        .executors((int) numberOfThreadsSpinner.getValue())
                        .evolve((int) numberOfGenerationsSpinner.getValue());
                break;
            }
            case "To Best Phenotype": {
                phenotype = evolution
                        .executors((int) numberOfThreadsSpinner.getValue())
                        .evolveToBestPhenotype((int) numberOfGenerationsSpinner.getValue());
                break;
            }
            case "By Steady Fitness": {
                result = evolution
                        .executors((int) numberOfThreadsSpinner.getValue())
                        .evolveBySteadyFitness((int) numberOfGenerationsSpinner.getValue());
                break;
            }
        }
        if (result != null) {
            UIVisualizator.getInstance().paintChart(network, storage, result, populationVisualizationPanel);
        }
        logger.trace("Result: " + ((result == null) ? phenotype.toString() : result.toString()));
    }//GEN-LAST:event_runButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JLabel crossoverProbabilityLabel;
    private javax.swing.JSpinner crossoverProbabilitySpinner;
    private javax.swing.JComboBox<String> crossoverTypeComboBox;
    private javax.swing.JLabel crossoverTypeLabel;
    private javax.swing.JComboBox<String> fitnessFunctionComboBox;
    private javax.swing.JLabel fitnessFunctionLabel;
    private javax.swing.JPanel gaConfigurationPanel;
    private javax.swing.JLabel initialPopulationLabel;
    private javax.swing.JTextField initialPopulationTextField;
    private javax.swing.JComboBox<String> launchTypeComboBox;
    private javax.swing.JLabel launchTypeLabel;
    private javax.swing.JPanel logPanel;
    private javax.swing.JScrollPane logScrollPane;
    private javax.swing.JTextArea logTextArea;
    private javax.swing.JPanel manualConfigPanel;
    private javax.swing.JPanel manualRunPanel;
    private javax.swing.JLabel mutatorProbabilityLabel;
    private javax.swing.JSpinner mutatorProbabilitySpinner;
    private javax.swing.JComboBox<String> mutatorTypeComboBox;
    private javax.swing.JLabel mutatorTypeLabel;
    private javax.swing.JLabel numberOfGenerationsLabel;
    private javax.swing.JSpinner numberOfGenerationsSpinner;
    private javax.swing.JLabel numberOfThreadsLabel;
    private javax.swing.JSpinner numberOfThreadsSpinner;
    private javax.swing.JPanel populationVisualizationPanel;
    private javax.swing.JButton runButton;
    private javax.swing.JPanel runGAPanel;
    private javax.swing.JComboBox<String> selectionTypeComboBox;
    private javax.swing.JLabel selectionTypeLabel;
    private javax.swing.JLabel selectionVariableLabel;
    private javax.swing.JTextField selectionVariableTextField;
    // End of variables declaration//GEN-END:variables
}
