package ui;

import core.model.controllers.NetworkController;
import core.model.controllers.StorageController;
import core.model.inventory.NetworkElement;
import core.model.inventory.impl.networkelement.EmptyElement;
import core.model.inventory.impl.networkelement.RootNetworkElement;
import core.model.inventory.impl.networkelement.SwitchNetworkElement;
import core.model.inventory.impl.networkelement.UserNetworkElement;
import core.model.inventory.impl.storage.Device;
import core.model.inventory.impl.storage.DoubleStorage;
import core.model.network.impl.DoubleLink;
import core.model.network.impl.DoubleNetwork;

public class NetworkPanel extends javax.swing.JPanel {

    private DoubleStorage storage;
    private DoubleNetwork network;

    /**
     * Creates new form NetworkPanel
     *
     * @param storage
     * @param network
     */
    public NetworkPanel(DoubleStorage storage, DoubleNetwork network) {
        initComponents();
        this.storage = storage;
        this.network = network;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        storageCreationPanel = new javax.swing.JPanel();
        manualStorageCreationPanel = new javax.swing.JPanel();
        removeDevicePanel = new javax.swing.JPanel();
        removeDeviceLabel = new javax.swing.JLabel();
        removeDeviceButton = new javax.swing.JButton();
        removeDeviceComboBox = new javax.swing.JComboBox<>();
        addDevicePanel = new javax.swing.JPanel();
        deviceNameLabel = new javax.swing.JLabel();
        deviceNameTextField = new javax.swing.JTextField();
        deviceCapacityLabel = new javax.swing.JLabel();
        deviceCapacityTextField = new javax.swing.JTextField();
        devicePriceLabel = new javax.swing.JLabel();
        devicePriceTextField = new javax.swing.JTextField();
        addDeviceButton = new javax.swing.JButton();
        autoStorageCreationPanel = new javax.swing.JPanel();
        storageSizeTextField = new javax.swing.JTextField();
        storageSizeLabel = new javax.swing.JLabel();
        minCapacityLabel = new javax.swing.JLabel();
        minCapacityTextField = new javax.swing.JTextField();
        minPriceTextField = new javax.swing.JTextField();
        minPriceLabel = new javax.swing.JLabel();
        maxCapacityLabel = new javax.swing.JLabel();
        maxCapacityTextField = new javax.swing.JTextField();
        maxPriceTextField = new javax.swing.JTextField();
        maxPriceLabel = new javax.swing.JLabel();
        generateStorageButton = new javax.swing.JButton();
        networkVisualizationPanel = new javax.swing.JPanel();
        logPanel = new javax.swing.JPanel();
        logScrollPane = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();
        networkCreationPanel = new javax.swing.JPanel();
        manualNetworkCreationPanel = new javax.swing.JPanel();
        addLinkPanel = new javax.swing.JPanel();
        neALabel = new javax.swing.JLabel();
        neAComboBox = new javax.swing.JComboBox<>();
        addLinkButton = new javax.swing.JButton();
        neZLabel = new javax.swing.JLabel();
        neZComboBox = new javax.swing.JComboBox<>();
        isDuplexCheckBox = new javax.swing.JCheckBox();
        addNetworkElementPanel = new javax.swing.JPanel();
        neTypeLabel = new javax.swing.JLabel();
        neCapacityLabel = new javax.swing.JLabel();
        neCapacityTextField = new javax.swing.JTextField();
        neNameLabel = new javax.swing.JLabel();
        neNameTextField = new javax.swing.JTextField();
        addNetworkElementButton = new javax.swing.JButton();
        neTypeComboBox = new javax.swing.JComboBox<>();
        autoNetworkCreationPanel = new javax.swing.JPanel();
        layersCountLabel = new javax.swing.JLabel();
        layersCountTextField = new javax.swing.JTextField();
        neMinPriceTextField = new javax.swing.JTextField();
        neMinPriceLabel = new javax.swing.JLabel();
        layerLengthLabel = new javax.swing.JLabel();
        layerLengthTextField = new javax.swing.JTextField();
        neMaxPriceTextField = new javax.swing.JTextField();
        neMaxPriceLabel = new javax.swing.JLabel();
        generateNetworkButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        storageCreationPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        storageCreationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Storage Creation"));

        manualStorageCreationPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        manualStorageCreationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Manual"));

        removeDevicePanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        removeDevicePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Remove Device"));

        removeDeviceLabel.setText("Devices:");

        removeDeviceButton.setText("Remove");
        removeDeviceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDeviceButtonActionPerformed(evt);
            }
        });

        removeDeviceComboBox.setToolTipText("");
        removeDeviceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDeviceComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeDevicePanelLayout = new javax.swing.GroupLayout(removeDevicePanel);
        removeDevicePanel.setLayout(removeDevicePanelLayout);
        removeDevicePanelLayout.setHorizontalGroup(
                removeDevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(removeDevicePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(removeDeviceLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeDeviceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeDeviceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        removeDevicePanelLayout.setVerticalGroup(
                removeDevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(removeDevicePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(removeDevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(removeDevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(removeDeviceLabel)
                                                .addComponent(removeDeviceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(removeDeviceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addDevicePanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        addDevicePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Add Device"));

        deviceNameLabel.setText("Device Name:");

        deviceCapacityLabel.setText("Capacity:");

        devicePriceLabel.setText("Price:");

        addDeviceButton.setText("Add");
        addDeviceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeviceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addDevicePanelLayout = new javax.swing.GroupLayout(addDevicePanel);
        addDevicePanel.setLayout(addDevicePanelLayout);
        addDevicePanelLayout.setHorizontalGroup(
                addDevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addDevicePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(addDevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(addDevicePanelLayout.createSequentialGroup()
                                                .addComponent(deviceNameLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(deviceNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(addDevicePanelLayout.createSequentialGroup()
                                                .addComponent(deviceCapacityLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(deviceCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(devicePriceLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(devicePriceTextField)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addDeviceButton)
                                .addContainerGap(12, Short.MAX_VALUE))
        );
        addDevicePanelLayout.setVerticalGroup(
                addDevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addDevicePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(addDevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(addDeviceButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(addDevicePanelLayout.createSequentialGroup()
                                                .addGroup(addDevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(deviceNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(deviceNameLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(addDevicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(deviceCapacityLabel)
                                                        .addComponent(deviceCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(devicePriceLabel)
                                                        .addComponent(devicePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout manualStorageCreationPanelLayout = new javax.swing.GroupLayout(manualStorageCreationPanel);
        manualStorageCreationPanel.setLayout(manualStorageCreationPanelLayout);
        manualStorageCreationPanelLayout.setHorizontalGroup(
                manualStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(addDevicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeDevicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        manualStorageCreationPanelLayout.setVerticalGroup(
                manualStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(manualStorageCreationPanelLayout.createSequentialGroup()
                                .addComponent(addDevicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeDevicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        autoStorageCreationPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        autoStorageCreationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Auto"));
        autoStorageCreationPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        storageSizeLabel.setText("Size:");

        minCapacityLabel.setText("Min Capacity:");

        minPriceLabel.setText("Min Price:");

        maxCapacityLabel.setText("Max Capacity:");

        maxPriceLabel.setText("Max Price:");

        generateStorageButton.setText("Generate");
        generateStorageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateStorageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout autoStorageCreationPanelLayout = new javax.swing.GroupLayout(autoStorageCreationPanel);
        autoStorageCreationPanel.setLayout(autoStorageCreationPanelLayout);
        autoStorageCreationPanelLayout.setHorizontalGroup(
                autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(autoStorageCreationPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(autoStorageCreationPanelLayout.createSequentialGroup()
                                                .addGroup(autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(autoStorageCreationPanelLayout.createSequentialGroup()
                                                                .addGroup(autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(maxCapacityLabel)
                                                                        .addComponent(maxPriceLabel)
                                                                        .addComponent(minPriceLabel))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGroup(autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(maxPriceTextField)
                                                                        .addComponent(maxCapacityTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                                                        .addComponent(minPriceTextField)))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, autoStorageCreationPanelLayout.createSequentialGroup()
                                                                .addComponent(minCapacityLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(minCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, autoStorageCreationPanelLayout.createSequentialGroup()
                                                                .addComponent(storageSizeLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(storageSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(generateStorageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        autoStorageCreationPanelLayout.setVerticalGroup(
                autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(autoStorageCreationPanelLayout.createSequentialGroup()
                                .addGroup(autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(minCapacityLabel)
                                        .addComponent(minCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(maxCapacityLabel)
                                        .addComponent(maxCapacityTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(maxPriceTextField)
                                        .addComponent(maxPriceLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(minPriceTextField)
                                        .addComponent(minPriceLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(autoStorageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(storageSizeLabel)
                                        .addComponent(storageSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(generateStorageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        javax.swing.GroupLayout storageCreationPanelLayout = new javax.swing.GroupLayout(storageCreationPanel);
        storageCreationPanel.setLayout(storageCreationPanelLayout);
        storageCreationPanelLayout.setHorizontalGroup(
                storageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(storageCreationPanelLayout.createSequentialGroup()
                                .addComponent(manualStorageCreationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(autoStorageCreationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        storageCreationPanelLayout.setVerticalGroup(
                storageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(storageCreationPanelLayout.createSequentialGroup()
                                .addGroup(storageCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(autoStorageCreationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(manualStorageCreationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        networkVisualizationPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        networkVisualizationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Network"));

        javax.swing.GroupLayout networkVisualizationPanelLayout = new javax.swing.GroupLayout(networkVisualizationPanel);
        networkVisualizationPanel.setLayout(networkVisualizationPanelLayout);
        networkVisualizationPanelLayout.setHorizontalGroup(
                networkVisualizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );
        networkVisualizationPanelLayout.setVerticalGroup(
                networkVisualizationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 281, Short.MAX_VALUE)
        );

        logPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        logPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Log"));

        logTextArea.setColumns(20);
        logTextArea.setRows(5);
        logScrollPane.setViewportView(logTextArea);

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
                logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(logPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(logScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                .addContainerGap())
        );
        logPanelLayout.setVerticalGroup(
                logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(logPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(logScrollPane)
                                .addContainerGap())
        );

        networkCreationPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        networkCreationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Network Creation"));

        manualNetworkCreationPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        manualNetworkCreationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Manual"));

        addLinkPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        addLinkPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Add Link"));

        neALabel.setText("NE A:");

        neAComboBox.setToolTipText("");

        addLinkButton.setText("Add");
        addLinkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLinkButtonActionPerformed(evt);
            }
        });

        neZLabel.setText("NE Z:");

        neZComboBox.setToolTipText("");

        isDuplexCheckBox.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        isDuplexCheckBox.setText("Is Duplex");

        javax.swing.GroupLayout addLinkPanelLayout = new javax.swing.GroupLayout(addLinkPanel);
        addLinkPanel.setLayout(addLinkPanelLayout);
        addLinkPanelLayout.setHorizontalGroup(
                addLinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addLinkPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(addLinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(addLinkPanelLayout.createSequentialGroup()
                                                .addComponent(neZLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(neZComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(addLinkPanelLayout.createSequentialGroup()
                                                .addComponent(neALabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(neAComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addLinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(addLinkButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(isDuplexCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .addContainerGap())
        );
        addLinkPanelLayout.setVerticalGroup(
                addLinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addLinkPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(addLinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(addLinkPanelLayout.createSequentialGroup()
                                                .addGroup(addLinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(neALabel)
                                                        .addComponent(neAComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(addLinkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(neZLabel)
                                                        .addComponent(neZComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(isDuplexCheckBox)))
                                        .addComponent(addLinkButton)))
        );

        addNetworkElementPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        addNetworkElementPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Add Network Element"));

        neTypeLabel.setText("NE Type:");

        neCapacityLabel.setText("Capacity:");

        neNameLabel.setText("Name:");

        addNetworkElementButton.setText("Add");
        addNetworkElementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNetworkElementButtonActionPerformed(evt);
            }
        });

        neTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Root", "User", "Switch", "Empty Element"}));

        javax.swing.GroupLayout addNetworkElementPanelLayout = new javax.swing.GroupLayout(addNetworkElementPanel);
        addNetworkElementPanel.setLayout(addNetworkElementPanelLayout);
        addNetworkElementPanelLayout.setHorizontalGroup(
                addNetworkElementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addNetworkElementPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(addNetworkElementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(addNetworkElementPanelLayout.createSequentialGroup()
                                                .addComponent(neTypeLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(neTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(addNetworkElementPanelLayout.createSequentialGroup()
                                                .addComponent(neCapacityLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(neCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(neNameLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(neNameTextField)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addNetworkElementButton))
        );
        addNetworkElementPanelLayout.setVerticalGroup(
                addNetworkElementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addNetworkElementPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(addNetworkElementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(addNetworkElementPanelLayout.createSequentialGroup()
                                                .addGroup(addNetworkElementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(neTypeLabel)
                                                        .addComponent(neTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(addNetworkElementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(neCapacityLabel)
                                                        .addComponent(neCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(neNameLabel)
                                                        .addComponent(neNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(addNetworkElementButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout manualNetworkCreationPanelLayout = new javax.swing.GroupLayout(manualNetworkCreationPanel);
        manualNetworkCreationPanel.setLayout(manualNetworkCreationPanelLayout);
        manualNetworkCreationPanelLayout.setHorizontalGroup(
                manualNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(manualNetworkCreationPanelLayout.createSequentialGroup()
                                .addGroup(manualNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(addLinkPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(addNetworkElementPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 2, Short.MAX_VALUE))
        );
        manualNetworkCreationPanelLayout.setVerticalGroup(
                manualNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(manualNetworkCreationPanelLayout.createSequentialGroup()
                                .addComponent(addNetworkElementPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addLinkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        autoNetworkCreationPanel.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        autoNetworkCreationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Auto"));

        layersCountLabel.setText("Layer's Count:");

        neMinPriceLabel.setText("Min Price:");

        layerLengthLabel.setText("Layer Length:");

        neMaxPriceLabel.setText("Max Price:");

        generateNetworkButton.setText("Generate");
        generateNetworkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateNetworkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout autoNetworkCreationPanelLayout = new javax.swing.GroupLayout(autoNetworkCreationPanel);
        autoNetworkCreationPanel.setLayout(autoNetworkCreationPanelLayout);
        autoNetworkCreationPanelLayout.setHorizontalGroup(
                autoNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(autoNetworkCreationPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(autoNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(autoNetworkCreationPanelLayout.createSequentialGroup()
                                                .addGroup(autoNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(autoNetworkCreationPanelLayout.createSequentialGroup()
                                                                .addGroup(autoNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(layerLengthLabel)
                                                                        .addComponent(neMaxPriceLabel)
                                                                        .addComponent(neMinPriceLabel))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGroup(autoNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(neMaxPriceTextField)
                                                                        .addComponent(layerLengthTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                                                        .addComponent(neMinPriceTextField)))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, autoNetworkCreationPanelLayout.createSequentialGroup()
                                                                .addComponent(layersCountLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(layersCountTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(generateNetworkButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        autoNetworkCreationPanelLayout.setVerticalGroup(
                autoNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(autoNetworkCreationPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(autoNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(layersCountLabel)
                                        .addComponent(layersCountTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(autoNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(layerLengthLabel)
                                        .addComponent(layerLengthTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(autoNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(neMaxPriceTextField)
                                        .addComponent(neMaxPriceLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(autoNetworkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(neMinPriceLabel)
                                        .addComponent(neMinPriceTextField))
                                .addGap(18, 18, 18)
                                .addComponent(generateNetworkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        javax.swing.GroupLayout networkCreationPanelLayout = new javax.swing.GroupLayout(networkCreationPanel);
        networkCreationPanel.setLayout(networkCreationPanelLayout);
        networkCreationPanelLayout.setHorizontalGroup(
                networkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(networkCreationPanelLayout.createSequentialGroup()
                                .addComponent(manualNetworkCreationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(autoNetworkCreationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        networkCreationPanelLayout.setVerticalGroup(
                networkCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(autoNetworkCreationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(manualNetworkCreationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(storageCreationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(networkCreationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(networkVisualizationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(networkVisualizationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(storageCreationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(networkCreationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        getAccessibleContext().setAccessibleName("networkPanel");
    }// </editor-fold>//GEN-END:initComponents

    private void addDeviceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDeviceButtonActionPerformed
        Device device = new Device(
                deviceNameTextField.getText(),
                Double.valueOf(deviceCapacityTextField.getText()),
                Double.valueOf(devicePriceTextField.getText()));
        storage.addElement(device);
        removeDeviceComboBox.addItem(device.toString());
    }//GEN-LAST:event_addDeviceButtonActionPerformed

    private void removeDeviceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDeviceButtonActionPerformed
        storage.removeElement(removeDeviceComboBox.getSelectedIndex());
        removeDeviceComboBox.remove(removeDeviceComboBox.getSelectedIndex());
    }//GEN-LAST:event_removeDeviceButtonActionPerformed

    private void removeDeviceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDeviceComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeDeviceComboBoxActionPerformed

    private void generateStorageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateStorageButtonActionPerformed
        storage = StorageController.getInstance().generateStorage(
                Integer.valueOf(storageSizeTextField.getText()),
                Double.valueOf(minCapacityTextField.getText()),
                Double.valueOf(maxCapacityTextField.getText()),
                Double.valueOf(minPriceTextField.getText()),
                Double.valueOf(maxPriceTextField.getText())
        );
    }//GEN-LAST:event_generateStorageButtonActionPerformed

    private void addNetworkElementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNetworkElementButtonActionPerformed
        NetworkElement element = null;
        switch (neTypeComboBox.getSelectedItem().toString()) {
            case "Root": {
                element = new RootNetworkElement(Double.valueOf(neCapacityTextField.getText()));
                network.addRoot(element);
                break;
            }
            case "User": {
                element = new UserNetworkElement(Double.valueOf(neCapacityTextField.getText()), 0);
                network.addUser(element);
                break;
            }
            case "Switch": {
                element = new SwitchNetworkElement(
                        neNameTextField.getText(),
                        Double.valueOf(neCapacityTextField.getText()),
                        100
                );
                network.addSwitch(element);
                break;
            }
            case "Empty Element": {
                element = new EmptyElement();
                network.addEmptyElement(new EmptyElement());
                break;
            }
        }
        neAComboBox.addItem(element.toString());
        neZComboBox.addItem(element.toString());
    }//GEN-LAST:event_addNetworkElementButtonActionPerformed

    private void addLinkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLinkButtonActionPerformed
        network.addLink(
                new DoubleLink(isDuplexCheckBox.isSelected(), 0.0, 0.0, 0.0),
                neAComboBox.getSelectedIndex(),
                neZComboBox.getSelectedIndex()
        );
    }//GEN-LAST:event_addLinkButtonActionPerformed

    private void generateNetworkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateNetworkButtonActionPerformed
        network = NetworkController.generateNetwork(
                Integer.valueOf(layerLengthTextField.getText()),
                Integer.valueOf(layersCountTextField.getText()),
                Double.valueOf(neMinPriceTextField.getText()),
                Double.valueOf(neMaxPriceTextField.getText())
        );
    }//GEN-LAST:event_generateNetworkButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDeviceButton;
    private javax.swing.JPanel addDevicePanel;
    private javax.swing.JButton addLinkButton;
    private javax.swing.JPanel addLinkPanel;
    private javax.swing.JButton addNetworkElementButton;
    private javax.swing.JPanel addNetworkElementPanel;
    private javax.swing.JPanel autoNetworkCreationPanel;
    private javax.swing.JPanel autoStorageCreationPanel;
    private javax.swing.JLabel deviceCapacityLabel;
    private javax.swing.JTextField deviceCapacityTextField;
    private javax.swing.JLabel deviceNameLabel;
    private javax.swing.JTextField deviceNameTextField;
    private javax.swing.JLabel devicePriceLabel;
    private javax.swing.JTextField devicePriceTextField;
    private javax.swing.JButton generateNetworkButton;
    private javax.swing.JButton generateStorageButton;
    private javax.swing.JCheckBox isDuplexCheckBox;
    private javax.swing.JLabel layerLengthLabel;
    private javax.swing.JTextField layerLengthTextField;
    private javax.swing.JLabel layersCountLabel;
    private javax.swing.JTextField layersCountTextField;
    private javax.swing.JPanel logPanel;
    private javax.swing.JScrollPane logScrollPane;
    private javax.swing.JTextArea logTextArea;
    private javax.swing.JPanel manualNetworkCreationPanel;
    private javax.swing.JPanel manualStorageCreationPanel;
    private javax.swing.JLabel maxCapacityLabel;
    private javax.swing.JTextField maxCapacityTextField;
    private javax.swing.JLabel maxPriceLabel;
    private javax.swing.JTextField maxPriceTextField;
    private javax.swing.JLabel minCapacityLabel;
    private javax.swing.JTextField minCapacityTextField;
    private javax.swing.JLabel minPriceLabel;
    private javax.swing.JTextField minPriceTextField;
    private javax.swing.JComboBox<String> neAComboBox;
    private javax.swing.JLabel neALabel;
    private javax.swing.JLabel neCapacityLabel;
    private javax.swing.JTextField neCapacityTextField;
    private javax.swing.JLabel neMaxPriceLabel;
    private javax.swing.JTextField neMaxPriceTextField;
    private javax.swing.JLabel neMinPriceLabel;
    private javax.swing.JTextField neMinPriceTextField;
    private javax.swing.JLabel neNameLabel;
    private javax.swing.JTextField neNameTextField;
    private javax.swing.JComboBox<String> neTypeComboBox;
    private javax.swing.JLabel neTypeLabel;
    private javax.swing.JComboBox<String> neZComboBox;
    private javax.swing.JLabel neZLabel;
    private javax.swing.JPanel networkCreationPanel;
    private javax.swing.JPanel networkVisualizationPanel;
    private javax.swing.JButton removeDeviceButton;
    private javax.swing.JComboBox<String> removeDeviceComboBox;
    private javax.swing.JLabel removeDeviceLabel;
    private javax.swing.JPanel removeDevicePanel;
    private javax.swing.JPanel storageCreationPanel;
    private javax.swing.JLabel storageSizeLabel;
    private javax.swing.JTextField storageSizeTextField;
    // End of variables declaration//GEN-END:variables
}
